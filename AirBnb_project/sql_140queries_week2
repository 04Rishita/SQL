SELECT * FROM ftn.listings;
SELECT * FROM ftn.listings;
-- 2. Write a query to show names from Listings table
select name from listings;

-- 3.Write a query to fetch total listings from the listings table
select count(*) as total_listings from listings;

-- 4.Write a query to fetch total listing_id from the booking_details table
select count(listing_id) from booking_details; 

-- 5.Write a query to fetch host ids from listings table
select host_id from listings;

-- 6.Write a query to fetch all unique host name from listings table
select distinct(host_name) from listings;

-- 7. Write a query to show all unique neighbourhood_group from listings table
select distinct(neighbourhood_group) from listings;

-- 8.Write a query to show all unique neighbourhood from listings table
select distinct(neighbourhood) from listings;

-- 9.Write a query to fetch unique room_type from listings tables
select distinct(room_type) from listings;

-- 10.Write a query to show all values of Brooklyn & Manhattan from listings tables
select * from listings where neighbourhood_group in ('Brooklyn' ,'Manhattan');

-- 11.Write a query to show maximum price from booking_details table
select max(price) as maximum_price from booking_details;

-- 12.Write a query to show minimum price from booking_details table
select min(price) as minimum_price from booking_details;

-- 13.Write a query to show average  price from booking_details table
select avg(price) as average_price from booking_details;

-- 14.Write a query to show minimum value of minimum_nights from booking_details table
select min(minimum_nights)  from booking_details;

-- 15.Write a query to show maximum value of minimum_nights from booking_details table
select max(minimum_nights)  from booking_details;

-- 16. Write a query to show average availability_365
select avg(availability_365) from booking_details;

-- 17.Write a query to show id , availability_365 and all availability_365 values greater than 300
select listing_id,availability_365 from booking_details where availability_365 > 300;

-- 18,Write a query to show count of id where price is in between 300 to 400
select count(*) from booking_details where price between 300 and 400;

-- 19.Write a query to show count of id where minimum_nights spend is less than 5
select count(*) from booking_details where minimum_nights < 5;

-- 20.Write a query to show count where minimum_nights spend is greater than 100
select count(*) from booking_details where minimum_nights > 100;

-- 21.Write a query to show all data of listings & booking_details
select * from listings,booking_details;

-- 22.Write a query to show host name and price
select l.host_name,b.price from listings l join booking_details b on l.id=b.listing_id;

-- 23.Write a query to show room_type and price
select l.room_type,b.price from listings l join booking_details b on l.id=b.listing_id;

-- 24.Write a query to show neighbourhood_group & minimum_nights spend
select l.neighbourhood_group,b.minimum_nights from listings l join booking_details b on l.id=b.listing_id;

-- 25.Write a query to show neighbourhood & availability_365
select l.neighbourhood,b.availability_365 from listings l join booking_details b on  l.id=b.listing_id;

-- 26.Write a query to show total price by neighbourhood_group
select sum(b.price) as total_price,l.neighbourhood_group from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group
order by total_price;

-- 27.Write a query to show maximum price by neighbourhood_group
select max(b.price) as maximum_price,l.neighbourhood_group from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group
order by maximum_price desc ;

-- 28.Write a query to show maximum night spend by neighbourhood_group
select max(b.minimum_nights) as maximum_nights,l.neighbourhood_group from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group
order by maximum_nights desc ;

-- 29.Write a query to show maximum reviews_per_month spend by neighbourhood
select max(b.reviews_per_month) as maximum_reviews,l.neighbourhood_group from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group
order by maximum_reviews;	

-- 30.Write a query to show maximum price by room type
select max(b.price) as maximum_price,l.room_type from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
order by maximum_price;

-- 31.Write a query to show average number_of_reviews by room_type
select avg(b.number_of_reviews) as avg_review,l.room_type from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
order by avg_review;

-- 32.Write a query to show average price by room type
select avg(b.price) as avg_price,l.room_type from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
order by avg_price;

-- 33.Write a query to show average night spend by room type
select avg(b.minimum_nights) as avg_night_spend,l.room_type from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
order by avg_night_spend;

-- 34.Write a query to show average price by room type but average price is less than 100
select avg(b.price) as avg_price,l.room_type from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
having avg(b.price) < 100;

-- 35.Write a query to show average night by neighbourhood and average_nights is greater than 5
select avg(b.minimum_nights) as avg_night,l.neighbourhood from listings l join booking_details b on l.id=b.listing_id 
group by l.room_type
having  avg(b.minimum_nights) > 5;

-- 36.Write a query to show all data from listings where price is greater than 200 using sub-query.
select * from listings l where l.id in (select b.listing_id from booking_details b join listings l on l.id=b.listing_id
where b.price > 200);

-- 37.Write a query to show all values from booking_details table where host id is 314941 using sub-query.
select * from booking_details b where b.listing_id in(select l.id from listings l join booking_details b on l.id=b.listing_id
where l.host_id=314941);

-- 38.Find all pairs of id having the same host id, each pair coming once only.
select a.id as id1 ,b.id as id2,a.host_id from listings a join listings b on a.host_id=b.host_id and a.id < b.id;

-- 39.Write an sql query to show fetch all records that have the term cozy in name
select * from listings where name like '%cozy%';

-- 40.Write an sql query to show price, host id, neighbourhood_group of manhattan neighbourhood_group
select b.price,l.host_id,l.neighbourhood_group from listings l join booking_details b on l.id=b.listing_id where l.neighbourhood_group='manhattan';

-- 41.Write a query to show id , host name, neighbourhood and price but only for Upper West Side & Williamsburg neighbourhood, also make sure price is greater than 100
select b.price,l.host_id,l.neighbourhood from listings l join booking_details b on l.id=b.listing_id where
l.neighbourhood in ('Upper West Side','Williamburg') and b.price > 100;

-- 42.Write a query to show id , host name, neighbourhood and price for host name Elise and neighbourhood is Bedford-Stuyvesant
select l.id,l.host_name,l.neighbourhood,b.price from listings l join booking_details b on l.id=b.listing_id  where l.host_name='Elise' and 
l.neighbourhood='Bedford-Stuyvesant';

-- 43.Write a query to show host_name, availability_365,minimum_nights only for 100+ availability_365 and minimum_nights
select l.host_name,b.availability_365,b.minimum_nights from booking_details b join listings l on b.listing_id=l.id where 
b.availability_365 > 100 and b.minimum_nights > 100;

-- 44.Write a query to show to fetch id , host_name , number_of_reviews, and reviews_per_month but show only that records where number of reviews are 500+ and review per month is 5+
select l.id,l.host_name,b.number_of_reviews,b.reviews_per_month from listings l join booking_details b on b.listing_id=l.id where 
b.number_of_reviews > 500 and b.reviews_per_month > 5 ;

-- 45.Write a query to show neighbourhood_group which have most total number of review
select l.neighbourhood_group,sum(b.number_of_reviews)as total_reveiws  from listings l join booking_details b on l.id=b.listing_id group by l.neighbourhood_group
order by total_reveiws desc
limit 1;

-- 46.Write a query to show host name which have most cheaper total price
select l.host_name,sum(b.price) as cheap_price from booking_details b join listings l on b.listing_id=l.id group by l.host_name
order by cheap_price asc
limit 1;

-- 47.Write a query to show host name which have most costly total price
select l.host_name,sum(b.price) as costly_price from booking_details b join listings l on b.listing_id=l.id group by l.host_name
order by costly_price desc
limit 1;

-- 48.Write a query to show host name which have max price using sub-query
select l.host_name,b.price from listings l join booking_details b on l.id=b.listing_id
where b.price=(select max(price) from booking_details);

-- 49.Write a query to show neighbourhood_group where price is less than 100
select l.neighbourhood_group,b.price from listings l join booking_details b on l.id=b.listing_id where b.price < 100;

-- 50.Write a query to find max price, average availability_365 for each room type and order in ascending by maximum price.
select max(b.price) as maximum_price,avg(b.availability_365) as avg_availability,l.room_type from listings l join booking_details b
on l.id=b.listing_id 
group by l.room_type
order by maximum_price asc;



-- 51.Show only id, host_id, price.
select l.id,l.host_id,b.price from listings l join booking_details b on l.id=b.listing_id;

-- 52.Show unique host_id values.
select distinct(host_id) from listings;

-- 53.Show all listings where price > 100.
select * from listings l join booking_details b on l.id=b.listing_id where b.price > 100;

-- 54.Show listings in the neighbourhood 'Chinatown'.
select * from listings where neighbourhood='Chinatown';

-- 55.Show all booking records with hostid.
select * from booking_details b join listings l on l.id=b.listing_id order by l.host_id desc;

-- 56.Find unique listingid from booking_details.
select distinct (listing_id) from booking_details;

-- 57.Show all bookings where price > 200.
select * from booking_details where price > 200;

-- 58.Show top 10 most expensive listings.
select l.id,l.name,b.price from listings l join booking_details b on l.id=b.listing_id
order by b.price desc
limit 10;

-- 59.Show cheapest 5 listings.
select l.id,l.name,b.price from listings l join booking_details b on l.id=b.listing_id
order by b.price asc
limit 5;

-- 60.Show bookings ordered by price descending.
select * from booking_details order by price desc;

-- 61.Show first 20 listings with price > 50.
select l.id,l.name,b.price from listings l join booking_details b on l.id=b.listing_id 
where b.price > 50;

-- 62.Show listings in neighbourhood 'Williamsburg' with price > 100.
select l.id,l.name,l.neighbourhood,b.price from listings l join booking_details b on l.id=b.listing_id 
where l.neighbourhood='Williamsburg' and b.price > 100;

-- 63.Show all bookings for listing_id = 5.
select * from booking_details where listing_id=5;

-- 64.Show all listings except neighbourhood 'Harlem'.
select * from listings where neighbourhood != 'Harlem';

-- 65.Count bookings per listing.
select count(*),listing_id from booking_details group by listing_id;

-- 66.Show average price per room type.
select l.room_type,avg(b.price)as avgerage_price from listings l join booking_details b on l.id=b.listing_id
 group by l.room_type 
 order by avgerage_price;
 
 -- 67.Show total number of listings in each neighbourhood.
 select neighbourhood,count(*) as total_listings from listings group by neighbourhood;
 
 -- 68.Find top 5 hosts with the most listings.
 select host_id,host_name,count(*) as listing_count from listings 
 group by host_id,host_name
 order by listing_count
 limit 5;
 
 -- 69.Show maximum and minimum price in each neighbourhood group.
 select l.neighbourhood_group,max(b.price) as max_price,min(b.price) as min_price from listings l join booking_details b 
 where l.id=b.listing_id group by  l.neighbourhood_group;
 
 -- 70.Show listings that have more than 100 reviews.
 select l.id,l.name,b.number_of_reviews from listings l join booking_details b on l.id=b.listing_id 
 where b.number_of_reviews > 100;
 
 -- 71.Show average minimum nights per room type.
 select l.room_type,avg(b.minimum_nights)as avg_nights from listings l join booking_details b on l.id=b.listing_id 
 group by l.room_type
 order by avg_nights;
 
 -- 72.Find neighbourhoods with an average availability of more than 200 days.
select l.neighbourhood,avg(b.availability_365) as avg_availabilty from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood
having avg(b.availability_365) > 200;

-- 73.Find all pairs of listings with the same host (each pair once).
select a.id as id1,b.id as id2 ,a.host_id from listings a join listings b on a.host_id=b.host_id and a.id < b.id;

-- 74.. Show average reviews per month by neighbourhood group.
select l.neighbourhood_group,avg(b.reviews_per_month) as avg_reviews from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group
order by avg_reviews;

-- 75.Show top 10 listings with the highest number of reviews per month.
select l.id,l.name,b.reviews_per_month from listings l join booking_details b on l.id=b.listing_id 
order by b.reviews_per_month desc
limit 10;

-- 76.Show all bookings with corresponding listing details.
select l.*,b.* from listings l join booking_details b on l.id=b.listing_id;

-- 77.Show listing name, host_id, and booking price.
select l.name,l.host_id,b.price from listings l join booking_details b on l.id=b.listing_id ;

-- 78.Show bookings with host_name from listings.
select b.listing_id,l.host_name,b.price from listings l join booking_details b on l.id=b.listing_id ;

-- 79.Find total revenue per listing (sum of booking price).
select l.id,l.name,sum(b.price) as totaL_revenue from listings l join booking_details b on l.id=b.listing_id 
group by l.id,l.name;

-- 80.Find total revenue per host.
select l.host_id,l.host_name,sum(b.price) as host_revenue from listings l join booking_details b on l.id=b.listing_id 
group by l.host_id,l.host_name
order by host_revenue;

-- 81.Show all users who booked listings in 'Manhattan'.
select b.listing_id,l.name,l.host_name from listings l join booking_details b on l.id=b.listing_id 
where l.neighbourhood_group='Manhattan';

-- 82.Show all bookings where listing price > 200.
select l.name,l.host_name,b.price from listings l join booking_details b on l.id=b.listing_id where b.price > 200;

-- 83.Show top 5 hosts with highest revenue
select l.host_name,sum(b.price) as total_price from listings l join booking_details b on l.id=b.listing_id 
group by l.host_name
order by total_price desc
limit 5;

-- 84.Find listings who booked more than 5 times
select listing_id,count(*) as total_booking from booking_details 
group by listing_id
having count(*) > 1;   -- this will null as there are unique ids.

-- 85.Find listings with average booking price above 300
select l.id,l.name,avg(b.price) as avg_price from listings l join booking_details b on l.id=b.listing_id
group by  l.id,l.name
having avg(b.price) < 300;

-- 86.Find hosts who own listings in more than one neighbourhood.
select host_id,host_name,count(distinct neighbourhood) as neighbourhood_count
from listings group by host_id,host_name
having count(distinct neighbourhood) > 1;

-- 87.Show host_id and their most expensive listing.
select l.host_id,l.host_name,max(b.price) as maximum_price from listings l join booking_details b 
on l.id=b.listing_id group by l.host_id,l.host_name 
order by maximum_price desc;

-- 88.Find the neighbourhood with the highest average price.
select l.neighbourhood,avg(b.price) as avg_price from listings l join booking_details b on l.id=b.listing_id 
group by l.neighbourhood
order by avg_price desc
limit 1;

-- 89.List all hosts with more than 10 listings.
select host_name,host_id,count(*) as listing_count from listings 
group by host_name,host_id
having count(*) > 10;

-- 90.Find the top 3 neighbourhood groups with most reviews.
select l.neighbourhood_group,sum(b.number_of_reviews) as total_review from listings l
join booking_details b on l.id=b.listing_id group by l.neighbourhood_group
order by total_review desc 
limit 3;

-- 91.Find the room type with the least average minimum nights.
select l.room_type,avg(b.minimum_nights) as least_nights from listings l join booking_details b on l.id=b.listing_id
group by l.room_type
order by least_nights asc
limit 1;

-- 92.Find hosts who own more than one room type.
select host_name,count(distinct room_type) as unique_roomtype from listings 
group by host_name
having count(distinct room_type) > 1;

-- 93.Find listings that are available all year (availability_365 = 365)
select l.id,l.name,b.availability_365 from listings l join booking_details b on l.id=b.listing_id where b.availability_365 = 365;

-- 94.Find average price per neighbourhood group and sort ascending.
select avg(b.price) as avg_price ,l.neighbourhood_group  from listings l join booking_details b on l.id=b.listing_id 
group by l.neighbourhood_group
order by avg_price asc;

-- 95.Find listings with zero reviews.
select l.id,l.name,b.number_of_reviews from listings l join booking_details b on l.id=b.listing_id where b.number_of_reviews=0;

-- 96.Find the top 5 most available listings (highest availability_365).
select l.name,l.id,b.availability_365 from listings l join booking_details b on l.id=b.listing_id 
order by b.availability_365 desc
limit 5;

-- 97.Find neighbourhoods where average reviews per month > 2.
select l.neighbourhood,avg(reviews_per_month) as avg_reveiws_month from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood
having avg(reviews_per_month) > 2;

-- 98.Find the neighbourhood group with the maximum number of listings.
select neighbourhood_group ,count(*) as total_listings from listings
group by neighbourhood_group
order by total_listings desc
limit 1;

-- 99.Show the 10 cheapest listings in Brooklyn.
select l.id,l.name,b.price from listings l join booking_details b on l.id=b.listing_id where l.neighbourhood_group='Brooklyn'
order by b.price asc
limit 10;

-- 100.Find hosts who have more than 50 total reviews across all their listings.
select l.host_id,l.host_name,sum(number_of_reviews) as total_reviews from listings l join booking_details b on l.id=b.listing_id
group by l.host_id,l.host_name
 having sum(number_of_reviews) > 50;
 
-- 101.Show the room type with the highest total availability.
select l.room_type,sum(b.availability_365) as total_availability from listings l join booking_details b on l.id=b.listing_id
group by l.room_type
order by total_availability
limit 1;

-- 102.Find the most expensive listing in each neighbourhood.
select l.id,l.name,max(b.price) as max_price from listings l join booking_details b on l.id=b.listing_id 
group by  l.id,l.name;

-- 103.Find hosts who have at least one listing with availability = 0.
select l.host_id from listings l join booking_details b on l.id=b.listing_id 
where b.availability_365=0;

-- 104.Find neighbourhoods where minimum nights average more than 10.
select l.neighbourhood,avg(b.price) as minimum_nights from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood
having avg(b.price) > 10;

-- 105.Find the total number of listings and average price per neighbourhood group.
select l.neighbourhood_group,count(l.id) as total_listings,avg(b.price) as average_price
from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood_group;

-- 106.Assign row numbers to listings ordered by price (highest first).
select l.id,l.name,b.price,row_number() over(order by b.price desc) as row_num
from listings l join booking_details b on l.id=b.listing_id;

-- 107.Rank listings by price within each neighbourhood group.
select l.id,l.name, l.neighbourhood_group,rank() over(partition by l.neighbourhood_group order by b.price desc) as price_rank
from listings l join booking_details b on l.id=b.listing_id;

-- 108.Assign dense rank to hosts based on their total revenue.
select l.host_id,l.host_name,sum(b.price) as total ,dense_rank() over(order by sum(b.price) desc) as total_revneue
from listings l join booking_details b on l.id=b.listing_id
group by  l.host_id,l.host_name;

-- 109.Rank room types by their average price.
select l.room_type,avg(b.price) as avg_price,rank() over(order by avg(b.price)desc) as rank_avgprice
from listings l join booking_details b on l.id=b.listing_id
group by  l.room_type;

-- 110.Show dense rank of neighbourhoods by total number of listings.
select l.neighbourhood,count(*) as total_listings,dense_rank() over(order by count(*) desc) as listing_rank
from listings l join booking_details b on l.id=b.listing_id;					

-- 111.Rank neighbourhood groups by average reviews per month.
select l.neighbourhood_group,avg(b.reviews_per_month) as avg_reveiws, rank() over(order by avg(b.reviews_per_month)) as review_rank
from listings l join booking_details b on l.id=b.listing_id group by l.neighbourhood_group;

-- 112.Dense rank listings by availability within each room type.
select l.room_type,l.id,b.availability_365,dense_rank() over(partition by l.room_type order by b.availability_365 desc)as avail_rank
from listings l join booking_details b on l.id=b.listing_id; 

-- 113.Find the top 5 neighbourhoods with the highest average booking price.
select l.neighbourhood,avg(b.price) as avg_price from listings l join booking_details b on l.id=b.listing_id
group by l.neighbourhood
order by avg_price desc
limit 5;

-- 114.Show the listing with the maximum number of reviews in each neighbourhood group.
select * from(select l.neighbourhood_group,l.id,l.name,b.number_of_reviews,row_number() over(partition by l.neighbourhood_group order by
b.number_of_reviews desc) as rnks from listings l join booking_details b on l.id=b.listing_id) ranked
where rnks=1;

-- 115.Find the average and total revenue for each room type.
select l.room_type,avg(b.price) as avergae_price,sum(b.price) as total_revenue from listings l join booking_details b on l.id=b.listing_id
group by l.room_type;

-- 116.List hosts who own both 'Entire home/apt' and 'Private room'.
select host_id,host_name from listings where room_type in('Enitire home/apt','Private room')
group by host_id,host_name ;

-- 117. Find listings where availability_365 is greater than the average availability of all listings.
select l.id,l.name,b.availability_365 from listings l join booking_details b on l.id=b.listing_id 
where b.availability_365 > (select avg(b.availability_365) from booking_details);

-- 118.Show the top 5 most expensive listings along with their host details.
select l.id,l.name,l.host_id,l.host_name,b.price from listings l join booking_details b on l.id=b.listing_id
order by b.price desc
limit 5;

-- 119.Find the neighbourhood group that has the most distinct hosts.
select l.neighbourhood_group,count(distinct l.host_id) as unique_hosts from listings l 
group by l.neighbourhood_group
order by unique_hosts desc
limit 1;

-- 120.
 select * from booking_details;
 
 -- 121.Show all listings in 'Brooklyn' with a price between 100 and 300.
 select l.id,l.name,l.neighbourhood_group,b.price from listings l join booking_details b 
 where l.neighbourhood_group='Brooklyn' and b.price between 200 and 300;
 
 -- 122.Show listings where the host has more than 3 listings.
 select host_id,count(*)as listing_count from listings
 group by host_id
 having count(*) > 3;
 
 -- 123.Show listings where minimum_nights is greater than 30.
 select l.id,l.name,b.minimum_nights from listings l join booking_details b on l.id=b.listing_id
 where b.minimum_nights > 30;
 
 -- 124.Find hosts with average listing price above 500.
 select l.host_id,l.host_name,avg(b.price) as avg_price from listings l join booking_details b on l.id=b.listing_id
 group by l.host_id,l.host_name
 having avg(b.price) < 500;
 
 -- 125.Find the cheapest listing in each neighbourhood.
 select * from (select l.neighbourhood,l.id,b.price,row_number() over(partition by l.neighbourhood order by b.price asc) as rnks
from listings l join booking_details b on l.id=b.listing_id) as rnk
where rnks=1;

-- 126.Show hosts who never had a booking.
select host_name from listings where id not in(select distinct listing_id from booking_details);

-- 127.Show top 5 listings with the highest availability (availability_365).
select l.id,l.name,b.availability_365 from listings l join booking_details b on l.id=b.listing_id order by b.availability_365
limit 5;

-- 128.Find the neighbourhood with the most total bookings.
select l.neighbourhood,count(*)as total_bookings from listings l join booking_details b on l.id=b.listing_id 
group by l.neighbourhood
order by total_bookings desc
limit 1;

-- 129.Show listings where price is NULL or zero.
select name from listings l where id is null;

-- 130.Show all listings where reviews per month > 5.
select l.id,l.name,b.reviews_per_month from listings l join booking_details b on l.id=b.listing_id  
where b.reviews_per_month > 5;

-- 131.Find hosts whose listings generate at least 20% of total revenue.
select l.host_id,l.host_name,sum(b.price) as total from listings l join booking_details b on l.id=b.listing_id 
group by l.host_id,l.host_name
having sum(b.price) >=0.2 * (select sum(price) from booking_details);

-- 132.Show listings where number_of_reviews = 0 but availability_365 > 0. 
select l.id,l.name,b.number_of_reviews,b.availability_365 from listings l join booking_details b 
on l.id=b.listing_id where b.number_of_reviews=0 and b.availability_365 >0;

-- 133.Show the total number of listings per neighbourhood group where price < 100.
select l.neighbourhood_group,count(*) as total_listings from listings l join booking_details b on l.id=b.listing_id
where b.price < 100;

-- 134.Show all hosts who have listings in more than 2 different neighbourhood groups.
select host_id,host_name,count(distinct neighbourhood_group) as unique_niegh
from listings group by host_id,host_name having count(distinct neighbourhood_group) > 2;

-- 135.Find the host with the longest average minimum nights across all their listings.
select l.host_id,l.host_name,avg(b.minimum_nights) as avg_nights from listings l join booking_details b on l.id=b.listing_id
group by l.host_id,l.host_name
order by avg_nights desc
limit 1;

-- 136.Show all bookings where price is greater than 500 and reviews_per_month are greater than 5.
select * from booking_details where price > 500 and reviews_per_month > 5 ;

-- 137.Find bookings where minimum_nights is between 7 and 30.
select * from booking_details where minimum_nights between 7 and 30;

-- 138.Show listings where the name starts with "Luxury".
select id,name,host_id,neighbourhood from listings where name like 'Luxury%';

-- 139.Categorize bookings based on price range.
select listing_id,price ,
case
when price < 100 then 'Low'
when price between 100 and 300 then 'Medium'
else 'High'
end as price_cat
from booking_details;

-- 140.Classify listings by availability.
select l.id,l.name,b.availability_365,
case 
when b.availability_365=0 then 'Not available'
when b.availability_365 between 1 and 100 then 'Partially available'
else 'Fully available'
end as review_status
from listings l join booking_details b on l.id=b.listing_id;





